apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-poc
spec:
  revisionHistoryLimit: 2
  replicas: 1
  template:
    metadata:
      labels:
        app: api-poc
    spec:
      containers:
        - image: gcr.io/oss-dev-213920/api-poc:1.0.0
          imagePullPolicy: Always
          name: api-poc
          ports:
          - containerPort: 8080
          env:
          - name: DEFAULT_PORT
            value: "8080"
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: LOG_LEVEL
          - name: NODE_ENV
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: NODE_ENV
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "0"
---
apiVersion: v1
kind: Service
metadata:
  name: api-poc
spec:
  selector:
    app: api-poc
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    name: http
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-poc
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/rewrite-target: $1
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - platform.oss-dev.net
    secretName: oss-dev-tls
  rules:
  - host: platform.oss-dev.net
    http:
      paths:
      - path: /health
        backend:
          serviceName: api-poc
          servicePort: 80
